16:21:31 env {'version': 17172736, 'tools': [{'tool': 'ar', 'tooldir': None, 'funs': None}, {'tool': 'cxx', 'tooldir': None, 'funs': None}, {'tool': 'g++', 'tooldir': None, 'funs': None}, {'tool': 'compiler_cxx', 'tooldir': None, 'funs': None}, {'tool': 'unittest_gtest', 'tooldir': None, 'funs': None}]}
16:21:31 action  def f(tsk): 	env = tsk.env 	gen = tsk.generator 	bld = gen.bld 	wd = getattr(tsk, 'cwd', None) 	def to_list(xx): 		if isinstance(xx, str): return [xx] 		return xx 	tsk.last_cmd = lst = [] 	lst.extend(to_list(env['CXX'])) 	lst.extend(tsk.colon('ARCH_ST', 'ARCH')) 	lst.extend(to_list(env['CXXFLAGS'])) 	lst.extend(to_list(env['CPPFLAGS'])) 	lst.extend(tsk.colon('FRAMEWORKPATH_ST', 'FRAMEWORKPATH')) 	lst.extend(tsk.colon('CPPPATH_ST', 'INCPATHS')) 	lst.extend(tsk.colon('DEFINES_ST', 'DEFINES')) 	lst.extend(to_list(env['CXX_SRC_F'])) 	lst.extend([a.path_from(bld.bldnode) for a in tsk.inputs]) 	lst.extend(to_list(env['CXX_TGT_F'])) 	lst.extend([a.path_from(bld.bldnode) for a in tsk.outputs]) 	lst = [x for x in lst if x] 	return tsk.exec_command(lst, cwd=wd, env=env.env or None) 
16:21:31 action  def f(tsk): 	env = tsk.env 	gen = tsk.generator 	bld = gen.bld 	wd = getattr(tsk, 'cwd', None) 	def to_list(xx): 		if isinstance(xx, str): return [xx] 		return xx 	tsk.last_cmd = lst = [] 	lst.extend(to_list(env['LINK_CXX'])) 	lst.extend(to_list(env['LINKFLAGS'])) 	lst.extend(to_list(env['CXXLNK_SRC_F'])) 	lst.extend([a.path_from(bld.bldnode) for a in tsk.inputs]) 	lst.extend(to_list(env['CXXLNK_TGT_F'])) 	lst.append(tsk.outputs[0].abspath()) 	lst.extend(tsk.colon('RPATH_ST', 'RPATH')) 	lst.extend(tsk.colon('FRAMEWORKPATH_ST', 'FRAMEWORKPATH')) 	lst.extend(tsk.colon('FRAMEWORK_ST', 'FRAMEWORK')) 	lst.extend(tsk.colon('ARCH_ST', 'ARCH')) 	lst.extend(to_list(env['STLIB_MARKER'])) 	lst.extend(tsk.colon('STLIBPATH_ST', 'STLIBPATH')) 	lst.extend(tsk.colon('STLIB_ST', 'STLIB')) 	lst.extend(to_list(env['SHLIB_MARKER'])) 	lst.extend(tsk.colon('LIBPATH_ST', 'LIBPATH')) 	lst.extend(tsk.colon('LIB_ST', 'LIB')) 	lst = [x for x in lst if x] 	return tsk.exec_command(lst, cwd=wd, env=env.env or None) 
16:21:31 env {'cxxstlib_PATTERN': 'lib%s.a', 'CXX_SRC_F': [], 'LIBPATH_ST': '-L%s', 'PKGCONFIG': '/opt/local/bin/pkg-config', 'DEST_CPU': 'x86_64', 'CXXFLAGS': ['-O2', '-Wall', '-g', '-pipe'], 'LIBPATH_UX': ['/usr/local/lib'], 'STLIB_MARKER': [], 'ARFLAGS': 'rcs', 'define_key': ['HAVE_PFICOMMON', 'HAVE_UX'], 'LINKFLAGS_cxxstlib': [], 'SHLIB_MARKER': [], 'cxxprogram_PATTERN': '%s', 'LINKFLAGS_cxxshlib': ['-dynamiclib'], 'LIB_UX': ['ux'], 'CPPPATH_ST': '-I%s', 'LIBDIR': '/usr/local/lib', 'LIB_ST': '-l%s', 'SONAME_ST': [], 'LIB_PFICOMMON': ['pficommon', 'pficommon_visualization', 'pficommon_text', 'pficommon_network_base', 'pficommon_concurrent', 'pficommon_data', 'pficommon_math', 'pficommon_system', 'pficommon_network_http', 'pficommon_lang', 'pficommon_network_rpc', 'pficommon_network_cgi'], 'INCLUDES_UX': ['/usr/local/include'], 'RPATH_ST': '-Wl,-rpath,%s', 'CC_VERSION': ('4', '2', '1'), 'cxxshlib_PATTERN': 'lib%s.dylib', 'FRAMEWORK_ST': ['-framework'], 'LIB_GTEST_PTHREAD': ['pthread'], 'DEFINES_ST': '-D%s', 'CXX_TGT_F': ['-c', '-o'], 'BINDIR': '/usr/local/bin', 'DEFINES': ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], 'CXXLNK_SRC_F': [], 'CXXFLAGS_MACBUNDLE': ['-fPIC'], 'LINK_CXX': ['/usr/bin/g++'], 'CXXLNK_TGT_F': ['-o'], 'ARCH_ST': ['-arch'], 'AR': '/usr/bin/ar', 'HAVE_UX': 1, 'HAVE_PFICOMMON': 1, 'INCLUDES_PFICOMMON': ['/usr/local/include'], 'UNITTEST_GTEST_PATH': '/Users/narisawa/src/digit_utils/.unittest-gtest', 'STLIB_ST': '-l%s', 'PREFIX': '/usr/local', 'STLIBPATH_ST': '-L%s', 'CXX_NAME': 'gcc', 'LINKFLAGS_MACBUNDLE': ['-bundle', '-undefined', 'dynamic_lookup'], 'CXX': ['/usr/bin/g++'], 'COMPILER_CXX': 'g++', 'FRAMEWORKPATH_ST': '-F%s', 'DEST_OS': 'darwin', 'macbundle_PATTERN': '%s.bundle', 'DEST_BINFMT': 'mac-o', 'CXXFLAGS_cxxshlib': ['-fPIC', '-compatibility_version', '1', '-current_version', '1'], 'LIBPATH_PFICOMMON': ['/usr/local/lib']}
Waf: Entering directory `/Users/narisawa/src/digit_utils/build'
16:21:31 build compile()
16:21:31 task_gen posting <task_gen 'digit_utils' declared in /Users/narisawa/src/digit_utils/src> 4464115792
16:21:31 task_gen -> set_macosx_deployment_target (4464115792)
16:21:31 task_gen -> check_err_features (4464115792)
16:21:31 task_gen -> apply_bundle (4464115792)
16:21:31 task_gen -> process_rule (4464115792)
16:21:31 task_gen -> process_source (4464115792)
16:21:31 task_gen -> apply_link (4464115792)
16:21:31 task_gen -> apply_objdeps (4464115792)
16:21:31 task_gen -> apply_uselib_local (4464115792)
16:21:31 task_gen -> process_use (4464115792)
16:21:31 task_gen -> propagate_uselib_vars (4464115792)
16:21:31 task_gen -> apply_incpaths (4464115792)
16:21:31 task_gen -> apply_implib (4464115792)
16:21:31 task_gen -> check_err_order (4464115792)
16:21:31 task_gen -> apply_vnum (4464115792)
16:21:31 task_gen posted digit_utils
16:21:31 task_gen posting <task_gen 'number_normalizer_test' declared in /Users/narisawa/src/digit_utils/src> 4464116176
16:21:31 task_gen -> test_remover (4464116176)
16:21:31 task_gen -> process_rule (4464116176)
16:21:31 task_gen -> gtest_attach (4464116176)
16:21:31 task_gen -> process_source (4464116176)
16:21:31 task_gen -> apply_link (4464116176)
16:21:31 task_gen -> make_test (4464116176)
16:21:31 task_gen -> check_err_features (4464116176)
16:21:31 task_gen -> apply_objdeps (4464116176)
16:21:31 task_gen -> apply_uselib_local (4464116176)
16:21:31 task_gen -> process_use (4464116176)
16:21:31 task_gen posting <task_gen 'GTEST_OBJECTS' declared in /Users/narisawa/src/digit_utils> 4464250128
16:21:31 task_gen -> set_macosx_deployment_target (4464250128)
16:21:31 task_gen -> check_err_features (4464250128)
16:21:31 task_gen -> process_rule (4464250128)
16:21:31 task_gen -> process_source (4464250128)
16:21:31 task_gen -> apply_link (4464250128)
16:21:31 task_gen -> apply_uselib_local (4464250128)
16:21:31 task_gen -> process_use (4464250128)
16:21:31 task_gen -> propagate_uselib_vars (4464250128)
16:21:31 task_gen -> apply_incpaths (4464250128)
16:21:31 task_gen -> check_err_order (4464250128)
16:21:31 task_gen posted GTEST_OBJECTS
16:21:31 task_gen -> propagate_uselib_vars (4464116176)
16:21:31 task_gen -> apply_incpaths (4464116176)
16:21:31 task_gen -> create_task_macapp (4464116176)
16:21:31 task_gen -> set_macosx_deployment_target (4464116176)
16:21:31 task_gen -> check_err_order (4464116176)
16:21:31 task_gen -> create_task_macplist (4464116176)
16:21:31 task_gen posted number_normalizer_test
16:21:31 task_gen posting <task_gen 'digit_utility_test' declared in /Users/narisawa/src/digit_utils/src> 4464116304
16:21:31 task_gen -> test_remover (4464116304)
16:21:31 task_gen -> process_rule (4464116304)
16:21:31 task_gen -> gtest_attach (4464116304)
16:21:31 task_gen -> process_source (4464116304)
16:21:31 task_gen -> apply_link (4464116304)
16:21:31 task_gen -> make_test (4464116304)
16:21:31 task_gen -> check_err_features (4464116304)
16:21:31 task_gen -> apply_objdeps (4464116304)
16:21:31 task_gen -> apply_uselib_local (4464116304)
16:21:31 task_gen -> process_use (4464116304)
16:21:31 task_gen -> propagate_uselib_vars (4464116304)
16:21:31 task_gen -> apply_incpaths (4464116304)
16:21:31 task_gen -> create_task_macapp (4464116304)
16:21:31 task_gen -> set_macosx_deployment_target (4464116304)
16:21:31 task_gen -> check_err_order (4464116304)
16:21:31 task_gen -> create_task_macplist (4464116304)
16:21:31 task_gen posted digit_utility_test
16:21:31 task_gen posting <task_gen 'normalizer_utility_test' declared in /Users/narisawa/src/digit_utils/src> 4464116496
16:21:31 task_gen -> test_remover (4464116496)
16:21:31 task_gen -> process_rule (4464116496)
16:21:31 task_gen -> gtest_attach (4464116496)
16:21:31 task_gen -> process_source (4464116496)
16:21:31 task_gen -> apply_link (4464116496)
16:21:31 task_gen -> make_test (4464116496)
16:21:31 task_gen -> check_err_features (4464116496)
16:21:31 task_gen -> apply_objdeps (4464116496)
16:21:31 task_gen -> apply_uselib_local (4464116496)
16:21:31 task_gen -> process_use (4464116496)
16:21:31 task_gen -> propagate_uselib_vars (4464116496)
16:21:31 task_gen -> apply_incpaths (4464116496)
16:21:31 task_gen -> create_task_macapp (4464116496)
16:21:31 task_gen -> set_macosx_deployment_target (4464116496)
16:21:31 task_gen -> check_err_order (4464116496)
16:21:31 task_gen -> create_task_macplist (4464116496)
16:21:31 task_gen posted normalizer_utility_test
16:21:31 task_gen posting <task_gen 'numerical_expression_normalizer_test' declared in /Users/narisawa/src/digit_utils/src> 4464116624
16:21:31 task_gen -> test_remover (4464116624)
16:21:31 task_gen -> process_rule (4464116624)
16:21:31 task_gen -> gtest_attach (4464116624)
16:21:31 task_gen -> process_source (4464116624)
16:21:31 task_gen -> apply_link (4464116624)
16:21:31 task_gen -> make_test (4464116624)
16:21:31 task_gen -> check_err_features (4464116624)
16:21:31 task_gen -> apply_objdeps (4464116624)
16:21:31 task_gen -> apply_uselib_local (4464116624)
16:21:31 task_gen -> process_use (4464116624)
16:21:31 task_gen -> propagate_uselib_vars (4464116624)
16:21:31 task_gen -> apply_incpaths (4464116624)
16:21:31 task_gen -> create_task_macapp (4464116624)
16:21:31 task_gen -> set_macosx_deployment_target (4464116624)
16:21:31 task_gen -> check_err_order (4464116624)
16:21:31 task_gen -> create_task_macplist (4464116624)
16:21:31 task_gen posted numerical_expression_normalizer_test
16:21:31 task_gen posting <task_gen 'abstime_expression_normalizer_test' declared in /Users/narisawa/src/digit_utils/src> 4464116752
16:21:31 task_gen -> test_remover (4464116752)
16:21:31 task_gen -> process_rule (4464116752)
16:21:31 task_gen -> gtest_attach (4464116752)
16:21:31 task_gen -> process_source (4464116752)
16:21:31 task_gen -> apply_link (4464116752)
16:21:31 task_gen -> make_test (4464116752)
16:21:31 task_gen -> check_err_features (4464116752)
16:21:31 task_gen -> apply_objdeps (4464116752)
16:21:31 task_gen -> apply_uselib_local (4464116752)
16:21:31 task_gen -> process_use (4464116752)
16:21:31 task_gen -> propagate_uselib_vars (4464116752)
16:21:31 task_gen -> apply_incpaths (4464116752)
16:21:31 task_gen -> create_task_macapp (4464116752)
16:21:31 task_gen -> set_macosx_deployment_target (4464116752)
16:21:31 task_gen -> check_err_order (4464116752)
16:21:31 task_gen -> create_task_macplist (4464116752)
16:21:31 task_gen posted abstime_expression_normalizer_test
16:21:31 task_gen posting <task_gen 'reltime_expression_normalizer_test' declared in /Users/narisawa/src/digit_utils/src> 4464116880
16:21:31 task_gen -> test_remover (4464116880)
16:21:31 task_gen -> process_rule (4464116880)
16:21:31 task_gen -> gtest_attach (4464116880)
16:21:31 task_gen -> process_source (4464116880)
16:21:31 task_gen -> apply_link (4464116880)
16:21:31 task_gen -> make_test (4464116880)
16:21:31 task_gen -> check_err_features (4464116880)
16:21:31 task_gen -> apply_objdeps (4464116880)
16:21:31 task_gen -> apply_uselib_local (4464116880)
16:21:31 task_gen -> process_use (4464116880)
16:21:31 task_gen -> propagate_uselib_vars (4464116880)
16:21:31 task_gen -> apply_incpaths (4464116880)
16:21:31 task_gen -> create_task_macapp (4464116880)
16:21:31 task_gen -> set_macosx_deployment_target (4464116880)
16:21:31 task_gen -> check_err_order (4464116880)
16:21:31 task_gen -> create_task_macplist (4464116880)
16:21:31 task_gen posted reltime_expression_normalizer_test
16:21:31 task_gen posting <task_gen 'duration_expression_normalizer_test' declared in /Users/narisawa/src/digit_utils/src> 4464117008
16:21:31 task_gen -> test_remover (4464117008)
16:21:31 task_gen -> process_rule (4464117008)
16:21:31 task_gen -> gtest_attach (4464117008)
16:21:31 task_gen -> process_source (4464117008)
16:21:31 task_gen -> apply_link (4464117008)
16:21:31 task_gen -> make_test (4464117008)
16:21:31 task_gen -> check_err_features (4464117008)
16:21:31 task_gen -> apply_objdeps (4464117008)
16:21:31 task_gen -> apply_uselib_local (4464117008)
16:21:31 task_gen -> process_use (4464117008)
16:21:31 task_gen -> propagate_uselib_vars (4464117008)
16:21:31 task_gen -> apply_incpaths (4464117008)
16:21:31 task_gen -> create_task_macapp (4464117008)
16:21:31 task_gen -> set_macosx_deployment_target (4464117008)
16:21:31 task_gen -> check_err_order (4464117008)
16:21:31 task_gen -> create_task_macplist (4464117008)
16:21:31 task_gen posted duration_expression_normalizer_test
16:21:31 task_gen posting <task_gen 'normalizer_tester' declared in /Users/narisawa/src/digit_utils/src> 4464117136
16:21:31 task_gen -> test_remover (4464117136)
16:21:31 task_gen -> process_rule (4464117136)
16:21:31 task_gen -> gtest_attach (4464117136)
16:21:31 task_gen -> process_source (4464117136)
16:21:31 task_gen -> apply_link (4464117136)
16:21:31 task_gen -> make_test (4464117136)
16:21:31 task_gen -> check_err_features (4464117136)
16:21:31 task_gen -> apply_objdeps (4464117136)
16:21:31 task_gen -> apply_uselib_local (4464117136)
16:21:31 task_gen -> process_use (4464117136)
16:21:31 task_gen -> propagate_uselib_vars (4464117136)
16:21:31 task_gen -> apply_incpaths (4464117136)
16:21:31 task_gen -> create_task_macapp (4464117136)
16:21:31 task_gen -> set_macosx_deployment_target (4464117136)
16:21:31 task_gen -> check_err_order (4464117136)
16:21:31 task_gen -> create_task_macplist (4464117136)
16:21:31 task_gen posted normalizer_tester
16:21:31 envhash 97b44e0ce5dc797ceb6784badd41b0c0 [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe', '-fPIC', '-compatibility_version', '1', '-current_version', '1'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/usr/local/include']]
16:21:31 envhash f92d2933a532aa51acfc5fd49f89cd05 [[], ['-arch'], [], ['-o'], [], [], '-F%s', ['-framework'], ['pficommon', 'pficommon_visualization', 'pficommon_text', 'pficommon_network_base', 'pficommon_concurrent', 'pficommon_data', 'pficommon_math', 'pficommon_system', 'pficommon_network_http', 'pficommon_lang', 'pficommon_network_rpc', 'pficommon_network_cgi', 'ux'], ['/usr/local/lib', '/usr/local/lib'], '-L%s', '-l%s', [], ['-dynamiclib'], ['/usr/bin/g++'], [], '-Wl,-rpath,%s', [], [], [], '-L%s', [], '-l%s']
16:21:31 envhash 49615a8abb7d3df62aeca40730e0d38a [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '/usr/local/include']]
16:21:31 envhash 49615a8abb7d3df62aeca40730e0d38a [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '/usr/local/include']]
16:21:31 envhash 49615a8abb7d3df62aeca40730e0d38a [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '/usr/local/include']]
16:21:31 envhash 49615a8abb7d3df62aeca40730e0d38a [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '/usr/local/include']]
16:21:31 envhash 49615a8abb7d3df62aeca40730e0d38a [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '/usr/local/include']]
16:21:31 envhash 49615a8abb7d3df62aeca40730e0d38a [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '/usr/local/include']]
16:21:31 envhash 49615a8abb7d3df62aeca40730e0d38a [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '/usr/local/include']]
16:21:31 envhash 49615a8abb7d3df62aeca40730e0d38a [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', ['/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '/usr/local/include']]
16:21:31 preproc scanning normalizer_tester.cpp (in src)
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_tester.cpp'
16:21:31 preproc line is define - HAVE_PFICOMMON 1 state is []
16:21:31 preproc line is define - HAVE_UX 1 state is []
16:21:31 preproc line is include - <gtest/gtest.h> state is []
16:21:31 preproc include found gtest/gtest.h    (<) 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src/gtest/gtest.h'
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_H_ state is []
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_H_ state is ['a']
16:21:31 preproc line is include - <limits> state is ['a']
16:21:31 preproc include found limits    (<) 
16:21:31 preproc line is include - <vector> state is ['a']
16:21:31 preproc include found vector    (<) 
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_ state is ['a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_ state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is include - <ctype.h>    state is ['a', 'a', 'a']
16:21:31 preproc include found ctype.h    (<) 
16:21:31 preproc line is include - <stddef.h>   state is ['a', 'a', 'a']
16:21:31 preproc include found stddef.h    (<) 
16:21:31 preproc line is include - <stdlib.h> state is ['a', 'a', 'a']
16:21:31 preproc include found stdlib.h    (<) 
16:21:31 preproc line is include - <stdio.h> state is ['a', 'a', 'a']
16:21:31 preproc include found stdio.h    (<) 
16:21:31 preproc line is include - <string.h> state is ['a', 'a', 'a']
16:21:31 preproc include found string.h    (<) 
16:21:31 preproc line is ifndef - _WIN32_WCE state is ['a', 'a', 'a']
16:21:31 preproc line is include - <sys/types.h> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found sys/types.h    (<) 
16:21:31 preproc line is include - <sys/stat.h> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found sys/stat.h    (<) 
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is include - <iostream>   state is ['a', 'a', 'a']
16:21:31 preproc include found iostream    (<) 
16:21:31 preproc line is include - <sstream>   state is ['a', 'a', 'a']
16:21:31 preproc include found sstream    (<) 
16:21:31 preproc line is include - <string>   state is ['a', 'a', 'a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is define - GTEST_DEV_EMAIL_ "googletestframework@@googlegroups.com" state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_FLAG_PREFIX_ "gtest_" state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_FLAG_PREFIX_DASH_ "gtest-" state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_FLAG_PREFIX_UPPER_ "GTEST_" state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_NAME_ "Google Test" state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_PROJECT_URL_ "http://code.google.com/p/googletest/" state is ['a', 'a', 'a']
16:21:31 preproc line is ifdef - __GNUC__ state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_GCC_VER_     (__GNUC__*10000 + __GNUC_MINOR__*100 + __GNUC_PATCHLEVEL__) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - __CYGWIN__ state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_OS_CYGWIN 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined __SYMBIAN32__ state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_SYMBIAN 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined _WIN32 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_WINDOWS 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - _WIN32_WCE state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_WINDOWS_MOBILE 1 state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is elif - defined(__MINGW__) || defined(__MINGW32__) state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_OS_WINDOWS_MINGW 1 state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_OS_WINDOWS_DESKTOP 1 state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is elif - defined __APPLE__ state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_MAC 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined __linux__ state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_LINUX 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - ANDROID state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_LINUX_ANDROID 1 state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is elif - defined __MVS__ state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_ZOS 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined(__sun) && defined(__SVR4) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_SOLARIS 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined(_AIX) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_AIX 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined(__hpux) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_HPUX 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined __native_client__ state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_OS_NACL 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - !GTEST_OS_WINDOWS state is ['a', 'a', 'a']
16:21:31 preproc line is include - <unistd.h> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found unistd.h    (<) 
16:21:31 preproc line is if - !GTEST_OS_NACL state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is include - <strings.h>   state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc include found strings.h    (<) 
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is elif - !GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is include - <direct.h> state is ['a', 'a', 'a', 's']
16:21:31 preproc line is include - <io.h> state is ['a', 'a', 'a', 's']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 's']
16:21:31 preproc line is ifndef - GTEST_HAS_POSIX_RE state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_POSIX_RE (!GTEST_OS_WINDOWS) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_POSIX_RE state is ['a', 'a', 'a']
16:21:31 preproc line is include - <regex.h>   state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found regex.h    (<) 
16:21:31 preproc line is define - GTEST_USES_POSIX_RE 1 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is elif - GTEST_OS_WINDOWS state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_USES_SIMPLE_RE 1 state is ['a', 'a', 'a', 's']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 's']
16:21:31 preproc line is define - GTEST_USES_SIMPLE_RE 1 state is ['a', 'a', 'a', 's']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 's']
16:21:31 preproc line is ifndef - GTEST_HAS_EXCEPTIONS state is ['a', 'a', 'a']
16:21:31 preproc line is if - defined(_MSC_VER) || defined(__BORLANDC__) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - _HAS_EXCEPTIONS state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - _HAS_EXCEPTIONS 1 state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_HAS_EXCEPTIONS _HAS_EXCEPTIONS state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined(__GNUC__) && __EXCEPTIONS state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_EXCEPTIONS 1 state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined(__SUNPRO_CC) state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_EXCEPTIONS 1 state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined(__IBMCPP__) && __EXCEPTIONS state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_EXCEPTIONS 1 state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined(__HP_aCC) state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_EXCEPTIONS 1 state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_EXCEPTIONS 0 state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - !defined(GTEST_HAS_STD_STRING) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_STD_STRING 1 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is elif - !GTEST_HAS_STD_STRING state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 's']
16:21:31 preproc line is ifndef - GTEST_HAS_GLOBAL_STRING state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_GLOBAL_STRING 0 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_HAS_STD_WSTRING state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_STD_WSTRING     (!(GTEST_OS_LINUX_ANDROID || GTEST_OS_CYGWIN || GTEST_OS_SOLARIS)) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_HAS_GLOBAL_WSTRING state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_GLOBAL_WSTRING     (GTEST_HAS_STD_WSTRING && GTEST_HAS_GLOBAL_STRING) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_HAS_RTTI state is ['a', 'a', 'a']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifdef - _CPPRTTI   state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_RTTI 1 state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_HAS_RTTI 0 state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is elif - defined(__GNUC__) && (GTEST_GCC_VER_ >= 40302) state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - __GXX_RTTI state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_RTTI 1 state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_HAS_RTTI 0 state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is elif - defined(__IBMCPP__) && (__IBMCPP__ >= 900) state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - __RTTI_ALL__ state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_RTTI 1 state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_HAS_RTTI 0 state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_RTTI 1 state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_RTTI state is ['a', 'a', 'a']
16:21:31 preproc line is include - <typeinfo> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found typeinfo    (<) 
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_HAS_PTHREAD state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_PTHREAD (GTEST_OS_LINUX || GTEST_OS_MAC || GTEST_OS_HPUX) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_PTHREAD state is ['a', 'a', 'a']
16:21:31 preproc line is include - <pthread.h>   state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is include - <time.h>   state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is ifndef - GTEST_HAS_TR1_TUPLE state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_TR1_TUPLE 1 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_USE_OWN_TR1_TUPLE state is ['a', 'a', 'a']
16:21:31 preproc line is if - (defined(__GNUC__) && !defined(__CUDACC__) && (GTEST_GCC_VER_ >= 40000))     || _MSC_VER >= 1600 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_USE_OWN_TR1_TUPLE 0 state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_USE_OWN_TR1_TUPLE 1 state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_TR1_TUPLE state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_USE_OWN_TR1_TUPLE state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_ state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is include - <utility>   state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc include found utility    (<) 
16:21:31 preproc line is if - defined(__SYMBIAN32__) || (defined(__SUNPRO_CC) && __SUNPRO_CC < 0x590) state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DECLARE_TUPLE_AS_FRIEND_ public: state is ['a', 'a', 'a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_DECLARE_TUPLE_AS_FRIEND_     template <GTEST_10_TYPENAMES_(U)> friend class tuple;    private: state is ['a', 'a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_0_TUPLE_(T) tuple<> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_1_TUPLE_(T) tuple<T##0, void, void, void, void, void, void,     void, void, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_2_TUPLE_(T) tuple<T##0, T##1, void, void, void, void, void,     void, void, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_3_TUPLE_(T) tuple<T##0, T##1, T##2, void, void, void, void,     void, void, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_4_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, void, void, void,     void, void, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_5_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, void, void,     void, void, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_6_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, void,     void, void, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_7_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6,     void, void, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_8_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6,     T##7, void, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_9_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6,     T##7, T##8, void> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_10_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6,     T##7, T##8, T##9> state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_0_TYPENAMES_(T) state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_1_TYPENAMES_(T) typename T##0 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_2_TYPENAMES_(T) typename T##0, typename T##1 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_3_TYPENAMES_(T) typename T##0, typename T##1, typename T##2 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_4_TYPENAMES_(T) typename T##0, typename T##1, typename T##2,     typename T##3 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_5_TYPENAMES_(T) typename T##0, typename T##1, typename T##2,     typename T##3, typename T##4 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_6_TYPENAMES_(T) typename T##0, typename T##1, typename T##2,     typename T##3, typename T##4, typename T##5 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_7_TYPENAMES_(T) typename T##0, typename T##1, typename T##2,     typename T##3, typename T##4, typename T##5, typename T##6 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_8_TYPENAMES_(T) typename T##0, typename T##1, typename T##2,     typename T##3, typename T##4, typename T##5, typename T##6, typename T##7 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_9_TYPENAMES_(T) typename T##0, typename T##1, typename T##2,     typename T##3, typename T##4, typename T##5, typename T##6,     typename T##7, typename T##8 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_10_TYPENAMES_(T) typename T##0, typename T##1, typename T##2,     typename T##3, typename T##4, typename T##5, typename T##6,     typename T##7, typename T##8, typename T##9 state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_BY_REF_(T) typename ::std::tr1::gtest_internal::ByRef<T>::type state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_ADD_REF_(T) typename ::std::tr1::gtest_internal::AddRef<T>::type state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_TUPLE_ELEMENT_(k, Tuple) typename tuple_element<k, Tuple >::type state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_0_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_1_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_2_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_3_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_4_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_5_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_6_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_7_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_8_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_9_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_10_TUPLE_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_0_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_1_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_2_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_3_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_4_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_5_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_6_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_7_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_8_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_9_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_10_TYPENAMES_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_DECLARE_TUPLE_AS_FRIEND_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_BY_REF_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_ADD_REF_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is undef - GTEST_TUPLE_ELEMENT_ state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is elif - GTEST_OS_SYMBIAN state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is ifdef - BOOST_HAS_TR1_TUPLE state is ['a', 'a', 'a', 'a', 's']
16:21:31 preproc line is undef - BOOST_HAS_TR1_TUPLE state is ['a', 'a', 'a', 'a', 's', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 's', 'u']
16:21:31 preproc line is define - BOOST_TR1_DETAIL_CONFIG_HPP_INCLUDED state is ['a', 'a', 'a', 'a', 's']
16:21:31 preproc line is include - <tuple> state is ['a', 'a', 'a', 'a', 's']
16:21:31 preproc line is elif - defined(__GNUC__) && (GTEST_GCC_VER_ >= 40000) state is ['a', 'a', 'a', 'a', 's']
16:21:31 preproc line is if - !GTEST_HAS_RTTI && GTEST_GCC_VER_ < 40302 state is ['a', 'a', 'a', 'a', 's']
16:21:31 preproc line is define - _TR1_FUNCTIONAL 1 state is ['a', 'a', 'a', 'a', 's', 'u']
16:21:31 preproc line is include - <tr1/tuple> state is ['a', 'a', 'a', 'a', 's', 'u']
16:21:31 preproc line is undef - _TR1_FUNCTIONAL   state is ['a', 'a', 'a', 'a', 's', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 's', 'u']
16:21:31 preproc line is include - <tr1/tuple>   state is ['a', 'a', 'a', 'a', 's', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 's', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 's']
16:21:31 preproc line is include - <tuple>   state is ['a', 'a', 'a', 'a', 's']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 's']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_HAS_CLONE state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_OS_LINUX && !defined(__ia64__) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_CLONE 1 state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_CLONE 0 state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_HAS_STREAM_REDIRECTION state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_OS_WINDOWS_MOBILE || GTEST_OS_SYMBIAN state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_STREAM_REDIRECTION 0 state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_STREAM_REDIRECTION 1 state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - (GTEST_OS_LINUX || GTEST_OS_MAC || GTEST_OS_CYGWIN || GTEST_OS_SOLARIS ||      (GTEST_OS_WINDOWS_DESKTOP && _MSC_VER >= 1400) ||      GTEST_OS_WINDOWS_MINGW || GTEST_OS_AIX || GTEST_OS_HPUX) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_DEATH_TEST 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is include - <vector>   state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_PARAM_TEST 1 state is ['a', 'a', 'a']
16:21:31 preproc line is if - defined(__GNUC__) || (_MSC_VER >= 1400) || defined(__SUNPRO_CC) ||     defined(__IBMCPP__) || defined(__HP_aCC) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_TYPED_TEST 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_TYPED_TEST_P 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_PARAM_TEST && GTEST_HAS_TR1_TUPLE && !defined(__SUNPRO_CC) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_COMBINE 1 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_WIDE_STRING_USES_UTF16_     (GTEST_OS_WINDOWS || GTEST_OS_CYGWIN || GTEST_OS_SYMBIAN || GTEST_OS_AIX) state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_OS_LINUX state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_CAN_STREAM_RESULTS_ 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - __INTEL_COMPILER state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_AMBIGUOUS_ELSE_BLOCKER_ state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_AMBIGUOUS_ELSE_BLOCKER_ switch (0) case 0: default:   state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - defined(__GNUC__) && !defined(COMPILER_ICC) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_ATTRIBUTE_UNUSED_ __attribute__ ((unused)) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_ATTRIBUTE_UNUSED_ state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DISALLOW_ASSIGN_(type)  void operator=(type const &) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DISALLOW_COPY_AND_ASSIGN_(type)  type(type const &);  GTEST_DISALLOW_ASSIGN_(type) state is ['a', 'a', 'a']
16:21:31 preproc line is if - defined(__GNUC__) && (GTEST_GCC_VER_ >= 30400) && !defined(COMPILER_ICC) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_MUST_USE_RESULT_ __attribute__ ((warn_unused_result)) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_MUST_USE_RESULT_ state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_HAS_SEH state is ['a', 'a', 'a']
16:21:31 preproc line is if - defined(_MSC_VER) || defined(__BORLANDC__) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_SEH 1 state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_SEH 0 state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_LINKED_AS_SHARED_LIBRARY state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_API_ __declspec(dllimport) state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is elif - GTEST_CREATE_SHARED_LIBRARY state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_API_ __declspec(dllexport) state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is ifndef - GTEST_API_ state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_API_ state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifdef - __GNUC__ state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_NO_INLINE_ __attribute__((noinline)) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_NO_INLINE_ state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_COMPILE_ASSERT_(expr, msg)   typedef ::testing::internal::CompileAssert<(bool(expr))>       msg[bool(expr) ? 1 : -1] state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_STRING state is ['a', 'a', 'a']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_WSTRING state is ['a', 'a', 'a']
16:21:31 preproc line is elif - GTEST_HAS_STD_WSTRING state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_STRING state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_STRING state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_USES_POSIX_RE state is ['a', 'a', 'a']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 's']
16:21:31 preproc line is define - GTEST_LOG_(severity)     ::testing::internal::GTestLog(::testing::internal::GTEST_##severity,                                   __FILE__, __LINE__).GetStream() state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_CHECK_(condition)     GTEST_AMBIGUOUS_ELSE_BLOCKER_     if (::testing::internal::IsTrue(condition))       ;     else       GTEST_LOG_(FATAL) << "Condition " #condition " failed. " state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_CHECK_POSIX_SUCCESS_(posix_call)   if (const int gtest_error = (posix_call))     GTEST_LOG_(FATAL) << #posix_call << "failed with error "                       << gtest_error state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_RTTI state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_RTTI state is ['a', 'a', 'a']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 's']
16:21:31 preproc line is if - GTEST_HAS_STREAM_REDIRECTION state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_DEATH_TEST state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_PTHREAD state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DECLARE_STATIC_MUTEX_(mutex)     extern ::testing::internal::MutexBase mutex state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_DEFINE_STATIC_MUTEX_(mutex)     ::testing::internal::MutexBase mutex = { PTHREAD_MUTEX_INITIALIZER, 0 } state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_IS_THREADSAFE 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_DECLARE_STATIC_MUTEX_(mutex)   extern ::testing::internal::Mutex mutex state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DEFINE_STATIC_MUTEX_(mutex) ::testing::internal::Mutex mutex state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_IS_THREADSAFE 0 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - defined(__SYMBIAN32__) || defined(__IBMCPP__) || defined(__SUNPRO_CC) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_ELLIPSIS_NEEDS_POD_ 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_CAN_COMPARE_NULL 1 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - defined(__SYMBIAN32__) || defined(__IBMCPP__) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_NEEDS_IS_POINTER_ 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_OS_WINDOWS state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_PATH_SEP_ "\\" state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_HAS_ALT_PATH_SEP_ 1 state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_PATH_SEP_ "/" state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_HAS_ALT_PATH_SEP_ 0 state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_OS_WINDOWS state is ['a', 'a', 'a']
16:21:31 preproc line is ifdef - __BORLANDC__ state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is if - GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i', 'u', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i', 'u', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is if - GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a', 'a']
16:21:31 preproc line is pragma - warning(push) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is pragma - warning(disable:4996) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - !GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - !GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - !GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a']
16:21:31 preproc line is elif - defined(__BORLANDC__) || defined(__SunOS_5_8) || defined(__SunOS_5_9) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a', 'a']
16:21:31 preproc line is pragma - warning(pop)   state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_OS_WINDOWS state is ['a', 'a', 'a']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - GTEST_FLAG(name) FLAGS_gtest_##name state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DECLARE_bool_(name) GTEST_API_ extern bool GTEST_FLAG(name) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DECLARE_int32_(name)     GTEST_API_ extern ::testing::internal::Int32 GTEST_FLAG(name) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DECLARE_string_(name)     GTEST_API_ extern ::testing::internal::String GTEST_FLAG(name) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DEFINE_bool_(name, default_val, doc)     GTEST_API_ bool GTEST_FLAG(name) = (default_val) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DEFINE_int32_(name, default_val, doc)     GTEST_API_ ::testing::internal::Int32 GTEST_FLAG(name) = (default_val) state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_DEFINE_string_(name, default_val, doc)     GTEST_API_ ::testing::internal::String GTEST_FLAG(name) = (default_val) state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_OS_LINUX state is ['a', 'a']
16:21:31 preproc line is include - <stdlib.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <sys/types.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <sys/wait.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <unistd.h> state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is include - <ctype.h> state is ['a', 'a']
16:21:31 preproc include found ctype.h    (<) 
16:21:31 preproc line is include - <string.h> state is ['a', 'a']
16:21:31 preproc include found string.h    (<) 
16:21:31 preproc line is include - <iomanip> state is ['a', 'a']
16:21:31 preproc include found iomanip    (<) 
16:21:31 preproc line is include - <limits> state is ['a', 'a']
16:21:31 preproc include found limits    (<) 
16:21:31 preproc line is include - <set> state is ['a', 'a']
16:21:31 preproc include found set    (<) 
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is ifdef - __BORLANDC__ state is ['a', 'a', 'a']
16:21:31 preproc line is include - <mem.h> state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is include - <string.h> state is ['a', 'a', 'a']
16:21:31 preproc include found string.h    (<) 
16:21:31 preproc line is include - <string> state is ['a', 'a', 'a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is if - GTEST_OS_WINDOWS_MOBILE state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_STRING state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is ifdef - __GLIBCXX__ state is ['a', 'a', 'a']
16:21:31 preproc line is include - <cxxabi.h> state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is elif - defined(__HP_aCC) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is include - <acxx_demangle.h> state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_RTTI state is ['a', 'a', 'a']
16:21:31 preproc line is if - defined(__GLIBCXX__) || defined(__HP_aCC) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifdef - __GLIBCXX__ state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 's']
16:21:31 preproc line is if - GTEST_HAS_TYPED_TEST || GTEST_HAS_TYPED_TEST_P state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_TEMPLATE_ template <typename T> class state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_BIND_(TmplSel, T)   TmplSel::template Bind<T>::type state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_CONCAT_TOKEN_(foo, bar) GTEST_CONCAT_TOKEN_IMPL_(foo, bar) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_CONCAT_TOKEN_IMPL_(foo, bar) foo ## bar state is ['a', 'a']
16:21:31 preproc line is ifdef - GTEST_ELLIPSIS_NEEDS_POD_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_IS_NULL_LITERAL_(x) false state is ['a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'i']
16:21:31 preproc line is define - GTEST_IS_NULL_LITERAL_(x)     (sizeof(::testing::internal::IsNullLiteralHelper(x)) == 1) state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is if - defined(__SYMBIAN32__) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_CREF_WORKAROUND_ const& state is ['a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'i']
16:21:31 preproc line is define - GTEST_CREF_WORKAROUND_ state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_FORMAT_IMPL_(operand2_type, operand1_printer)inline String FormatForComparisonFailureMessage(    operand2_type::value_type* GTEST_CREF_WORKAROUND_ str,     const operand2_type&  ) {  return operand1_printer(str);}inline String FormatForComparisonFailureMessage(    const operand2_type::value_type* GTEST_CREF_WORKAROUND_ str,     const operand2_type&  ) {  return operand1_printer(str);} state is ['a', 'a']
16:21:31 preproc line is if - GTEST_HAS_STD_WSTRING state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_STRING state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_WSTRING state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is undef - GTEST_FORMAT_IMPL_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_FORMAT_CHAR_PTR_IMPL_(CharType)                         template <typename T>                                               String FormatForComparisonFailureMessage(CharType* GTEST_CREF_WORKAROUND_ p,                                            const T&) {     return PrintToString(static_cast<const void*>(p));                } state is ['a', 'a']
16:21:31 preproc line is undef - GTEST_FORMAT_CHAR_PTR_IMPL_ state is ['a', 'a']
16:21:31 preproc line is if - GTEST_OS_WINDOWS state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_TYPED_TEST || GTEST_HAS_TYPED_TEST_P state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is define - GTEST_REMOVE_REFERENCE_(T)     typename ::testing::internal::RemoveReference<T>::type state is ['a', 'a']
16:21:31 preproc line is if - defined(_MSC_VER) || defined(__SUNPRO_CC) || defined(__IBMCPP__) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is define - GTEST_REMOVE_CONST_(T)     typename ::testing::internal::RemoveConst<T>::type state is ['a', 'a']
16:21:31 preproc line is define - GTEST_REMOVE_REFERENCE_AND_CONST_(T)     GTEST_REMOVE_CONST_(GTEST_REMOVE_REFERENCE_(T)) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_ADD_REFERENCE_(T)     typename ::testing::internal::AddReference<T>::type state is ['a', 'a']
16:21:31 preproc line is define - GTEST_REFERENCE_TO_CONST_(T)     GTEST_ADD_REFERENCE_(const GTEST_REMOVE_REFERENCE_(T)) state is ['a', 'a']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a']
16:21:31 preproc line is pragma - warning(push)           state is ['a', 'a', 'i']
16:21:31 preproc line is pragma - warning(disable:4244)   state is ['a', 'a', 'i']
16:21:31 preproc line is pragma - warning(pop)            state is ['a', 'a', 'i']
16:21:31 preproc line is elif - defined(__BORLANDC__) state is ['a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_MESSAGE_AT_(file, line, message, result_type)   ::testing::internal::AssertHelper(result_type, file, line, message)     = ::testing::Message() state is ['a', 'a']
16:21:31 preproc line is define - GTEST_MESSAGE_(message, result_type)   GTEST_MESSAGE_AT_(__FILE__, __LINE__, message, result_type) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_FATAL_FAILURE_(message)   return GTEST_MESSAGE_(message, ::testing::TestPartResult::kFatalFailure) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_NONFATAL_FAILURE_(message)   GTEST_MESSAGE_(message, ::testing::TestPartResult::kNonFatalFailure) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_SUCCESS_(message)   GTEST_MESSAGE_(message, ::testing::TestPartResult::kSuccess) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement)   if (::testing::internal::AlwaysTrue()) { statement; } state is ['a', 'a']
16:21:31 preproc line is define - GTEST_TEST_THROW_(statement, expected_exception, fail)   GTEST_AMBIGUOUS_ELSE_BLOCKER_   if (::testing::internal::ConstCharPtr gtest_msg = "") {     bool gtest_caught_expected = false;     try {       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement);     }     catch (expected_exception const&) {       gtest_caught_expected = true;     }     catch (...) {       gtest_msg.value =           "Expected: " #statement " throws an exception of type "           #expected_exception ".\n  Actual: it throws a different type.";       goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__);     }     if (!gtest_caught_expected) {       gtest_msg.value =           "Expected: " #statement " throws an exception of type "           #expected_exception ".\n  Actual: it throws nothing.";       goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__);     }   } else     GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__):       fail(gtest_msg.value) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_TEST_NO_THROW_(statement, fail)   GTEST_AMBIGUOUS_ELSE_BLOCKER_   if (::testing::internal::AlwaysTrue()) {     try {       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement);     }     catch (...) {       goto GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__);     }   } else     GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__):       fail("Expected: " #statement " doesn't throw an exception.\n"            "  Actual: it throws.") state is ['a', 'a']
16:21:31 preproc line is define - GTEST_TEST_ANY_THROW_(statement, fail)   GTEST_AMBIGUOUS_ELSE_BLOCKER_   if (::testing::internal::AlwaysTrue()) {     bool gtest_caught_any = false;     try {       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement);     }     catch (...) {       gtest_caught_any = true;     }     if (!gtest_caught_any) {       goto GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__);     }   } else     GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__):       fail("Expected: " #statement " throws an exception.\n"            "  Actual: it doesn't.") state is ['a', 'a']
16:21:31 preproc line is define - GTEST_TEST_BOOLEAN_(expression, text, actual, expected, fail)   GTEST_AMBIGUOUS_ELSE_BLOCKER_   if (const ::testing::AssertionResult gtest_ar_ =       ::testing::AssertionResult(expression))     ;   else     fail(::testing::internal::GetBoolAssertionFailureMessage(        gtest_ar_, text, #actual, #expected).c_str()) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_TEST_NO_FATAL_FAILURE_(statement, fail)   GTEST_AMBIGUOUS_ELSE_BLOCKER_   if (::testing::internal::AlwaysTrue()) {     ::testing::internal::HasNewFatalFailureHelper gtest_fatal_failure_checker;     GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement);     if (gtest_fatal_failure_checker.has_new_fatal_failure()) {       goto GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__);     }   } else     GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__):       fail("Expected: " #statement " doesn't generate new fatal "            "failures in the current thread.\n"            "  Actual: it does.") state is ['a', 'a']
16:21:31 preproc line is define - GTEST_TEST_CLASS_NAME_(test_case_name, test_name)   test_case_name##_##test_name##_Test state is ['a', 'a']
16:21:31 preproc line is define - GTEST_TEST_(test_case_name, test_name, parent_class, parent_id)class GTEST_TEST_CLASS_NAME_(test_case_name, test_name) : public parent_class { public:  GTEST_TEST_CLASS_NAME_(test_case_name, test_name)() {} private:  virtual void TestBody();  static ::testing::TestInfo* const test_info_ GTEST_ATTRIBUTE_UNUSED_;  GTEST_DISALLOW_COPY_AND_ASSIGN_(      GTEST_TEST_CLASS_NAME_(test_case_name, test_name));};::testing::TestInfo* const GTEST_TEST_CLASS_NAME_(test_case_name, test_name)  ::test_info_ =    ::testing::internal::MakeAndRegisterTestInfo(        #test_case_name, #test_name, NULL, NULL,         (parent_id),         parent_class::SetUpTestCase,         parent_class::TearDownTestCase,         new ::testing::internal::TestFactoryImpl<            GTEST_TEST_CLASS_NAME_(test_case_name, test_name)>);void GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::TestBody() state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_ state is ['a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_ state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is include - <stdio.h> state is ['a', 'a', 'a']
16:21:31 preproc include found stdio.h    (<) 
16:21:31 preproc line is if - GTEST_HAS_DEATH_TEST state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_EXCEPTIONS state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_EXECUTE_DEATH_TEST_STATEMENT_(statement, death_test)   try {     GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement);   } catch (const ::std::exception& gtest_exception) {     fprintf(        stderr,         "\n%s: Caught std::exception-derived exception escaping the "         "death test statement. Exception message: %s\n",         ::testing::internal::FormatFileLocation(__FILE__, __LINE__).c_str(),         gtest_exception.what());     fflush(stderr);     death_test->Abort(::testing::internal::DeathTest::TEST_THREW_EXCEPTION);   } catch (...) {     death_test->Abort(::testing::internal::DeathTest::TEST_THREW_EXCEPTION);   } state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_EXECUTE_DEATH_TEST_STATEMENT_(statement, death_test)   GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement) state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'i', 'u']
16:21:31 preproc line is define - GTEST_DEATH_TEST_(statement, predicate, regex, fail)   GTEST_AMBIGUOUS_ELSE_BLOCKER_   if (::testing::internal::AlwaysTrue()) {     const ::testing::internal::RE& gtest_regex = (regex);     ::testing::internal::DeathTest* gtest_dt;     if (!::testing::internal::DeathTest::Create(#statement, &gtest_regex,         __FILE__, __LINE__, &gtest_dt)) {       goto GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__);     }     if (gtest_dt != NULL) {       ::testing::internal::scoped_ptr< ::testing::internal::DeathTest>           gtest_dt_ptr(gtest_dt);       switch (gtest_dt->AssumeRole()) {         case ::testing::internal::DeathTest::OVERSEE_TEST:           if (!gtest_dt->Passed(predicate(gtest_dt->Wait()))) {             goto GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__);           }           break;         case ::testing::internal::DeathTest::EXECUTE_TEST: {           ::testing::internal::DeathTest::ReturnSentinel               gtest_sentinel(gtest_dt);           GTEST_EXECUTE_DEATH_TEST_STATEMENT_(statement, gtest_dt);           gtest_dt->Abort(::testing::internal::DeathTest::TEST_DID_NOT_DIE);           break;         }         default:           break;       }     }   } else     GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__):       fail(::testing::internal::DeathTest::LastMessage()) state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'a', 'i']
16:21:31 preproc line is define - GTEST_UNSUPPORTED_DEATH_TEST_(statement, regex, terminator)     GTEST_AMBIGUOUS_ELSE_BLOCKER_     if (::testing::internal::AlwaysTrue()) {       GTEST_LOG_(WARNING)           << "Death tests are not supported on this platform.\n"           << "Statement '" #statement "' cannot be verified.";     } else if (::testing::internal::AlwaysFalse()) {       ::testing::internal::RE::PartialMatch(".*", (regex));       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement);       terminator;     } else       ::testing::Message() state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_DEATH_TEST state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_EXIT(statement, predicate, regex)     GTEST_DEATH_TEST_(statement, predicate, regex, GTEST_FATAL_FAILURE_) state is ['a', 'a', 'i']
16:21:31 preproc line is define - EXPECT_EXIT(statement, predicate, regex)     GTEST_DEATH_TEST_(statement, predicate, regex, GTEST_NONFATAL_FAILURE_) state is ['a', 'a', 'i']
16:21:31 preproc line is define - ASSERT_DEATH(statement, regex)     ASSERT_EXIT(statement, ::testing::internal::ExitedUnsuccessfully, regex) state is ['a', 'a', 'i']
16:21:31 preproc line is define - EXPECT_DEATH(statement, regex)     EXPECT_EXIT(statement, ::testing::internal::ExitedUnsuccessfully, regex) state is ['a', 'a', 'i']
16:21:31 preproc line is if - !GTEST_OS_WINDOWS state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i', 'u']
16:21:31 preproc line is ifdef - NDEBUG state is ['a', 'a', 'i']
16:21:31 preproc line is define - EXPECT_DEBUG_DEATH(statement, regex)   do { statement; } while (::testing::internal::AlwaysFalse()) state is ['a', 'a', 'i', 'u']
16:21:31 preproc line is define - ASSERT_DEBUG_DEATH(statement, regex)   do { statement; } while (::testing::internal::AlwaysFalse()) state is ['a', 'a', 'i', 'u']
16:21:31 preproc line is else -  state is ['a', 'a', 'i', 'u']
16:21:31 preproc line is define - EXPECT_DEBUG_DEATH(statement, regex)   EXPECT_DEATH(statement, regex) state is ['a', 'a', 'i', 'u']
16:21:31 preproc line is define - ASSERT_DEBUG_DEATH(statement, regex)   ASSERT_DEATH(statement, regex) state is ['a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i', 'u']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_DEATH_TEST state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_DEATH_IF_SUPPORTED(statement, regex)     EXPECT_DEATH(statement, regex) state is ['a', 'a', 'i']
16:21:31 preproc line is define - ASSERT_DEATH_IF_SUPPORTED(statement, regex)     ASSERT_DEATH(statement, regex) state is ['a', 'a', 'i']
16:21:31 preproc line is else -  state is ['a', 'a', 'i']
16:21:31 preproc line is define - EXPECT_DEATH_IF_SUPPORTED(statement, regex)     GTEST_UNSUPPORTED_DEATH_TEST_(statement, regex, ) state is ['a', 'a', 'a']
16:21:31 preproc line is define - ASSERT_DEATH_IF_SUPPORTED(statement, regex)     GTEST_UNSUPPORTED_DEATH_TEST_(statement, regex, return) state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_ state is ['a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_ state is ['a', 'a']
16:21:31 preproc line is include - <limits> state is ['a', 'a']
16:21:31 preproc include found limits    (<) 
16:21:31 preproc line is if - GTEST_OS_SYMBIAN state is ['a', 'a']
16:21:31 preproc line is else -  state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_STD_WSTRING state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_WSTRING state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is if - GTEST_OS_SYMBIAN state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_ state is ['a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_ state is ['a', 'a']
16:21:31 preproc line is if - 0 state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is if - !GTEST_OS_SYMBIAN state is ['a', 'a']
16:21:31 preproc line is include - <utility> state is ['a', 'a', 'a']
16:21:31 preproc include found utility    (<) 
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is include - <iterator> state is ['a', 'a', 'a']
16:21:31 preproc include found iterator    (<) 
16:21:31 preproc line is include - <utility> state is ['a', 'a', 'a']
16:21:31 preproc include found utility    (<) 
16:21:31 preproc line is include - <vector> state is ['a', 'a', 'a']
16:21:31 preproc include found vector    (<) 
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_ state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is include - <stdlib.h> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found stdlib.h    (<) 
16:21:31 preproc line is include - <assert.h> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found assert.h    (<) 
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_ state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is include - <ostream>   state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found ostream    (<) 
16:21:31 preproc line is include - <sstream> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found sstream    (<) 
16:21:31 preproc line is include - <string> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <utility> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found utility    (<) 
16:21:31 preproc line is include - <vector> state is ['a', 'a', 'a', 'a']
16:21:31 preproc include found vector    (<) 
16:21:31 preproc line is if - !defined(_MSC_VER) || defined(_NATIVE_WCHAR_T_DEFINED) state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_STRING state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_GLOBAL_WSTRING state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_STD_WSTRING state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_TR1_TUPLE state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is pragma - warning(push)           state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is pragma - warning(disable:4180)   state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is pragma - warning(pop)            state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is pragma - warning(push)           state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is pragma - warning(disable:4180)   state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is pragma - warning(pop)            state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_TR1_TUPLE state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_PARAM_TEST state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_ state is ['a', 'a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_ state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_PARAM_TEST state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_COMBINE state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is if - GTEST_HAS_PARAM_TEST state is ['a', 'a']
16:21:31 preproc line is if - GTEST_HAS_COMBINE state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a', 'a']
16:21:31 preproc line is define - TEST_P(test_case_name, test_name)   class GTEST_TEST_CLASS_NAME_(test_case_name, test_name)       : public test_case_name {    public:     GTEST_TEST_CLASS_NAME_(test_case_name, test_name)() {}     virtual void TestBody();    private:     static int AddToRegistry() {       ::testing::UnitTest::GetInstance()->parameterized_test_registry().           GetTestCasePatternHolder<test_case_name>(              #test_case_name, __FILE__, __LINE__)->AddTestPattern(                  #test_case_name,                   #test_name,                   new ::testing::internal::TestMetaFactory<                       GTEST_TEST_CLASS_NAME_(test_case_name, test_name)>());       return 0;     }     static int gtest_registering_dummy_;     GTEST_DISALLOW_COPY_AND_ASSIGN_(        GTEST_TEST_CLASS_NAME_(test_case_name, test_name));   };   int GTEST_TEST_CLASS_NAME_(test_case_name,                              test_name)::gtest_registering_dummy_ =       GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::AddToRegistry();   void GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::TestBody() state is ['a', 'a', 'a']
16:21:31 preproc line is define - INSTANTIATE_TEST_CASE_P(prefix, test_case_name, generator)   ::testing::internal::ParamGenerator<test_case_name::ParamType>       gtest_##prefix##test_case_name##_EvalGenerator_() { return generator; }   int gtest_##prefix##test_case_name##_dummy_ =       ::testing::UnitTest::GetInstance()->parameterized_test_registry().           GetTestCasePatternHolder<test_case_name>(              #test_case_name, __FILE__, __LINE__)->AddTestCaseInstantiation(                  #prefix,                   &gtest_##prefix##test_case_name##_EvalGenerator_,                   __FILE__, __LINE__) state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_PROD_H_ state is ['a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_PROD_H_ state is ['a', 'a']
16:21:31 preproc line is define - FRIEND_TEST(test_case_name, test_name)friend class test_case_name##_##test_name##_Test state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_ state is ['a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_ state is ['a', 'a']
16:21:31 preproc line is include - <iosfwd> state is ['a', 'a']
16:21:31 preproc include found iosfwd    (<) 
16:21:31 preproc line is include - <vector> state is ['a', 'a']
16:21:31 preproc include found vector    (<) 
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_ state is ['a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_ state is ['a', 'a']
16:21:31 preproc line is if - 0 state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is if - 0 state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_TYPED_TEST state is ['a', 'a']
16:21:31 preproc line is define - GTEST_TYPE_PARAMS_(TestCaseName) gtest_type_params_##TestCaseName##_ state is ['a', 'a', 'i']
16:21:31 preproc line is define - TYPED_TEST_CASE(CaseName, Types)   typedef ::testing::internal::TypeList< Types >::type       GTEST_TYPE_PARAMS_(CaseName) state is ['a', 'a', 'i']
16:21:31 preproc line is define - TYPED_TEST(CaseName, TestName)   template <typename gtest_TypeParam_>   class GTEST_TEST_CLASS_NAME_(CaseName, TestName)       : public CaseName<gtest_TypeParam_> {    private:     typedef CaseName<gtest_TypeParam_> TestFixture;     typedef gtest_TypeParam_ TypeParam;     virtual void TestBody();   };   bool gtest_##CaseName##_##TestName##_registered_ GTEST_ATTRIBUTE_UNUSED_ =       ::testing::internal::TypeParameterizedTest<           CaseName,           ::testing::internal::TemplateSel<               GTEST_TEST_CLASS_NAME_(CaseName, TestName)>,           GTEST_TYPE_PARAMS_(CaseName)>::Register(              "", #CaseName, #TestName, 0);   template <typename gtest_TypeParam_>   void GTEST_TEST_CLASS_NAME_(CaseName, TestName)<gtest_TypeParam_>::TestBody() state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is if - GTEST_HAS_TYPED_TEST_P state is ['a', 'a']
16:21:31 preproc line is define - GTEST_CASE_NAMESPACE_(TestCaseName)   gtest_case_##TestCaseName##_ state is ['a', 'a', 'i']
16:21:31 preproc line is define - GTEST_TYPED_TEST_CASE_P_STATE_(TestCaseName)   gtest_typed_test_case_p_state_##TestCaseName##_ state is ['a', 'a', 'i']
16:21:31 preproc line is define - GTEST_REGISTERED_TEST_NAMES_(TestCaseName)   gtest_registered_test_names_##TestCaseName##_ state is ['a', 'a', 'i']
16:21:31 preproc line is define - TYPED_TEST_CASE_P(CaseName)   static ::testing::internal::TypedTestCasePState       GTEST_TYPED_TEST_CASE_P_STATE_(CaseName) state is ['a', 'a', 'i']
16:21:31 preproc line is define - TYPED_TEST_P(CaseName, TestName)   namespace GTEST_CASE_NAMESPACE_(CaseName) {   template <typename gtest_TypeParam_>   class TestName : public CaseName<gtest_TypeParam_> {    private:     typedef CaseName<gtest_TypeParam_> TestFixture;     typedef gtest_TypeParam_ TypeParam;     virtual void TestBody();   };   static bool gtest_##TestName##_defined_ GTEST_ATTRIBUTE_UNUSED_ =       GTEST_TYPED_TEST_CASE_P_STATE_(CaseName).AddTestName(          __FILE__, __LINE__, #CaseName, #TestName);   }   template <typename gtest_TypeParam_>   void GTEST_CASE_NAMESPACE_(CaseName)::TestName<gtest_TypeParam_>::TestBody() state is ['a', 'a', 'i']
16:21:31 preproc line is define - REGISTER_TYPED_TEST_CASE_P(CaseName, ...)   namespace GTEST_CASE_NAMESPACE_(CaseName) {   typedef ::testing::internal::Templates<__VA_ARGS__>::type gtest_AllTests_;   }   static const char* const GTEST_REGISTERED_TEST_NAMES_(CaseName) =       GTEST_TYPED_TEST_CASE_P_STATE_(CaseName).VerifyRegisteredTestNames(          __FILE__, __LINE__, #__VA_ARGS__) state is ['a', 'a', 'i']
16:21:31 preproc line is define - INSTANTIATE_TYPED_TEST_CASE_P(Prefix, CaseName, Types)   bool gtest_##Prefix##_##CaseName GTEST_ATTRIBUTE_UNUSED_ =       ::testing::internal::TypeParameterizedTestCase<CaseName,           GTEST_CASE_NAMESPACE_(CaseName)::gtest_AllTests_,           ::testing::internal::TypeList< Types >::type>::Register(              #Prefix, #CaseName, GTEST_REGISTERED_TEST_NAMES_(CaseName)) state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is if - GTEST_HAS_DEATH_TEST state is ['a']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is if - GTEST_HAS_PARAM_TEST state is ['a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a']
16:21:31 preproc line is pragma - warning(push)           state is ['a', 'i']
16:21:31 preproc line is pragma - warning(disable:4389)   state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is ifdef - _MSC_VER state is ['a']
16:21:31 preproc line is pragma - warning(pop)           state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is define - GTEST_IMPL_CMP_HELPER_(op_name, op)template <typename T1, typename T2>AssertionResult CmpHelper##op_name(const char* expr1, const char* expr2,                                    const T1& val1, const T2& val2) {  if (val1 op val2) {    return AssertionSuccess();  } else {    return AssertionFailure()         << "Expected: (" << expr1 << ") " #op " (" << expr2        << "), actual: " << FormatForComparisonFailureMessage(val1, val2)        << " vs " << FormatForComparisonFailureMessage(val2, val1);  }}GTEST_API_ AssertionResult CmpHelper##op_name(    const char* expr1, const char* expr2, BiggestInt val1, BiggestInt val2) state is ['a']
16:21:31 preproc line is undef - GTEST_IMPL_CMP_HELPER_ state is ['a']
16:21:31 preproc line is if - GTEST_HAS_STD_WSTRING state is ['a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is if - GTEST_HAS_PARAM_TEST state is ['a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is define - ADD_FAILURE() GTEST_NONFATAL_FAILURE_("Failed") state is ['a']
16:21:31 preproc line is define - ADD_FAILURE_AT(file, line)   GTEST_MESSAGE_AT_(file, line, "Failed",                     ::testing::TestPartResult::kNonFatalFailure) state is ['a']
16:21:31 preproc line is define - GTEST_FAIL() GTEST_FATAL_FAILURE_("Failed") state is ['a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_FAIL state is ['a']
16:21:31 preproc line is define - FAIL() GTEST_FAIL() state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is define - GTEST_SUCCEED() GTEST_SUCCESS_("Succeeded") state is ['a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_SUCCEED state is ['a']
16:21:31 preproc line is define - SUCCEED() GTEST_SUCCEED() state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_THROW(statement, expected_exception)   GTEST_TEST_THROW_(statement, expected_exception, GTEST_NONFATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - EXPECT_NO_THROW(statement)   GTEST_TEST_NO_THROW_(statement, GTEST_NONFATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - EXPECT_ANY_THROW(statement)   GTEST_TEST_ANY_THROW_(statement, GTEST_NONFATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - ASSERT_THROW(statement, expected_exception)   GTEST_TEST_THROW_(statement, expected_exception, GTEST_FATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - ASSERT_NO_THROW(statement)   GTEST_TEST_NO_THROW_(statement, GTEST_FATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - ASSERT_ANY_THROW(statement)   GTEST_TEST_ANY_THROW_(statement, GTEST_FATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - EXPECT_TRUE(condition)   GTEST_TEST_BOOLEAN_(condition, #condition, false, true,                       GTEST_NONFATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - EXPECT_FALSE(condition)   GTEST_TEST_BOOLEAN_(!(condition), #condition, true, false,                       GTEST_NONFATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - ASSERT_TRUE(condition)   GTEST_TEST_BOOLEAN_(condition, #condition, false, true,                       GTEST_FATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - ASSERT_FALSE(condition)   GTEST_TEST_BOOLEAN_(!(condition), #condition, true, false,                       GTEST_FATAL_FAILURE_) state is ['a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_ state is ['a']
16:21:31 preproc line is define - GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_ state is ['a', 'a']
16:21:31 preproc line is ifndef - GTEST_INCLUDE_GTEST_GTEST_H_ state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is define - GTEST_ASSERT_(expression, on_failure)   GTEST_AMBIGUOUS_ELSE_BLOCKER_   if (const ::testing::AssertionResult gtest_ar = (expression))     ;   else     on_failure(gtest_ar.failure_message()) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED_FORMAT1_(pred_format, v1, on_failure)  GTEST_ASSERT_(pred_format(#v1, v1),                on_failure) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED1_(pred, v1, on_failure)  GTEST_ASSERT_(::testing::AssertPred1Helper(#pred,                                              #v1,                                              pred,                                              v1), on_failure) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED_FORMAT1(pred_format, v1)   GTEST_PRED_FORMAT1_(pred_format, v1, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED1(pred, v1)   GTEST_PRED1_(pred, v1, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED_FORMAT1(pred_format, v1)   GTEST_PRED_FORMAT1_(pred_format, v1, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED1(pred, v1)   GTEST_PRED1_(pred, v1, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED_FORMAT2_(pred_format, v1, v2, on_failure)  GTEST_ASSERT_(pred_format(#v1, #v2, v1, v2),                on_failure) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED2_(pred, v1, v2, on_failure)  GTEST_ASSERT_(::testing::AssertPred2Helper(#pred,                                              #v1,                                              #v2,                                              pred,                                              v1,                                              v2), on_failure) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED_FORMAT2(pred_format, v1, v2)   GTEST_PRED_FORMAT2_(pred_format, v1, v2, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED2(pred, v1, v2)   GTEST_PRED2_(pred, v1, v2, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED_FORMAT2(pred_format, v1, v2)   GTEST_PRED_FORMAT2_(pred_format, v1, v2, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED2(pred, v1, v2)   GTEST_PRED2_(pred, v1, v2, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED_FORMAT3_(pred_format, v1, v2, v3, on_failure)  GTEST_ASSERT_(pred_format(#v1, #v2, #v3, v1, v2, v3),                on_failure) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED3_(pred, v1, v2, v3, on_failure)  GTEST_ASSERT_(::testing::AssertPred3Helper(#pred,                                              #v1,                                              #v2,                                              #v3,                                              pred,                                              v1,                                              v2,                                              v3), on_failure) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED_FORMAT3(pred_format, v1, v2, v3)   GTEST_PRED_FORMAT3_(pred_format, v1, v2, v3, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED3(pred, v1, v2, v3)   GTEST_PRED3_(pred, v1, v2, v3, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED_FORMAT3(pred_format, v1, v2, v3)   GTEST_PRED_FORMAT3_(pred_format, v1, v2, v3, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED3(pred, v1, v2, v3)   GTEST_PRED3_(pred, v1, v2, v3, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED_FORMAT4_(pred_format, v1, v2, v3, v4, on_failure)  GTEST_ASSERT_(pred_format(#v1, #v2, #v3, #v4, v1, v2, v3, v4),                on_failure) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED4_(pred, v1, v2, v3, v4, on_failure)  GTEST_ASSERT_(::testing::AssertPred4Helper(#pred,                                              #v1,                                              #v2,                                              #v3,                                              #v4,                                              pred,                                              v1,                                              v2,                                              v3,                                              v4), on_failure) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED_FORMAT4(pred_format, v1, v2, v3, v4)   GTEST_PRED_FORMAT4_(pred_format, v1, v2, v3, v4, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED4(pred, v1, v2, v3, v4)   GTEST_PRED4_(pred, v1, v2, v3, v4, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED_FORMAT4(pred_format, v1, v2, v3, v4)   GTEST_PRED_FORMAT4_(pred_format, v1, v2, v3, v4, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED4(pred, v1, v2, v3, v4)   GTEST_PRED4_(pred, v1, v2, v3, v4, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED_FORMAT5_(pred_format, v1, v2, v3, v4, v5, on_failure)  GTEST_ASSERT_(pred_format(#v1, #v2, #v3, #v4, #v5, v1, v2, v3, v4, v5),                on_failure) state is ['a', 'a']
16:21:31 preproc line is define - GTEST_PRED5_(pred, v1, v2, v3, v4, v5, on_failure)  GTEST_ASSERT_(::testing::AssertPred5Helper(#pred,                                              #v1,                                              #v2,                                              #v3,                                              #v4,                                              #v5,                                              pred,                                              v1,                                              v2,                                              v3,                                              v4,                                              v5), on_failure) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED_FORMAT5(pred_format, v1, v2, v3, v4, v5)   GTEST_PRED_FORMAT5_(pred_format, v1, v2, v3, v4, v5, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_PRED5(pred, v1, v2, v3, v4, v5)   GTEST_PRED5_(pred, v1, v2, v3, v4, v5, GTEST_NONFATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED_FORMAT5(pred_format, v1, v2, v3, v4, v5)   GTEST_PRED_FORMAT5_(pred_format, v1, v2, v3, v4, v5, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is define - ASSERT_PRED5(pred, v1, v2, v3, v4, v5)   GTEST_PRED5_(pred, v1, v2, v3, v4, v5, GTEST_FATAL_FAILURE_) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_EQ(expected, actual)   EXPECT_PRED_FORMAT2(::testing::internal::                       EqHelper<GTEST_IS_NULL_LITERAL_(expected)>::Compare,                       expected, actual) state is ['a']
16:21:31 preproc line is define - EXPECT_NE(expected, actual)   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperNE, expected, actual) state is ['a']
16:21:31 preproc line is define - EXPECT_LE(val1, val2)   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperLE, val1, val2) state is ['a']
16:21:31 preproc line is define - EXPECT_LT(val1, val2)   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperLT, val1, val2) state is ['a']
16:21:31 preproc line is define - EXPECT_GE(val1, val2)   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperGE, val1, val2) state is ['a']
16:21:31 preproc line is define - EXPECT_GT(val1, val2)   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperGT, val1, val2) state is ['a']
16:21:31 preproc line is define - GTEST_ASSERT_EQ(expected, actual)   ASSERT_PRED_FORMAT2(::testing::internal::                       EqHelper<GTEST_IS_NULL_LITERAL_(expected)>::Compare,                       expected, actual) state is ['a']
16:21:31 preproc line is define - GTEST_ASSERT_NE(val1, val2)   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperNE, val1, val2) state is ['a']
16:21:31 preproc line is define - GTEST_ASSERT_LE(val1, val2)   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperLE, val1, val2) state is ['a']
16:21:31 preproc line is define - GTEST_ASSERT_LT(val1, val2)   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperLT, val1, val2) state is ['a']
16:21:31 preproc line is define - GTEST_ASSERT_GE(val1, val2)   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperGE, val1, val2) state is ['a']
16:21:31 preproc line is define - GTEST_ASSERT_GT(val1, val2)   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperGT, val1, val2) state is ['a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_ASSERT_EQ state is ['a']
16:21:31 preproc line is define - ASSERT_EQ(val1, val2) GTEST_ASSERT_EQ(val1, val2) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_ASSERT_NE state is ['a']
16:21:31 preproc line is define - ASSERT_NE(val1, val2) GTEST_ASSERT_NE(val1, val2) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_ASSERT_LE state is ['a']
16:21:31 preproc line is define - ASSERT_LE(val1, val2) GTEST_ASSERT_LE(val1, val2) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_ASSERT_LT state is ['a']
16:21:31 preproc line is define - ASSERT_LT(val1, val2) GTEST_ASSERT_LT(val1, val2) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_ASSERT_GE state is ['a']
16:21:31 preproc line is define - ASSERT_GE(val1, val2) GTEST_ASSERT_GE(val1, val2) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_ASSERT_GT state is ['a']
16:21:31 preproc line is define - ASSERT_GT(val1, val2) GTEST_ASSERT_GT(val1, val2) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is define - EXPECT_STREQ(expected, actual)   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperSTREQ, expected, actual) state is ['a']
16:21:31 preproc line is define - EXPECT_STRNE(s1, s2)   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperSTRNE, s1, s2) state is ['a']
16:21:31 preproc line is define - EXPECT_STRCASEEQ(expected, actual)   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperSTRCASEEQ, expected, actual) state is ['a']
16:21:31 preproc line is define - EXPECT_STRCASENE(s1, s2)  EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperSTRCASENE, s1, s2) state is ['a']
16:21:31 preproc line is define - ASSERT_STREQ(expected, actual)   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperSTREQ, expected, actual) state is ['a']
16:21:31 preproc line is define - ASSERT_STRNE(s1, s2)   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperSTRNE, s1, s2) state is ['a']
16:21:31 preproc line is define - ASSERT_STRCASEEQ(expected, actual)   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperSTRCASEEQ, expected, actual) state is ['a']
16:21:31 preproc line is define - ASSERT_STRCASENE(s1, s2)  ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperSTRCASENE, s1, s2) state is ['a']
16:21:31 preproc line is define - EXPECT_FLOAT_EQ(expected, actual)  EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<float>,                       expected, actual) state is ['a']
16:21:31 preproc line is define - EXPECT_DOUBLE_EQ(expected, actual)  EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<double>,                       expected, actual) state is ['a']
16:21:31 preproc line is define - ASSERT_FLOAT_EQ(expected, actual)  ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<float>,                       expected, actual) state is ['a']
16:21:31 preproc line is define - ASSERT_DOUBLE_EQ(expected, actual)  ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<double>,                       expected, actual) state is ['a']
16:21:31 preproc line is define - EXPECT_NEAR(val1, val2, abs_error)  EXPECT_PRED_FORMAT3(::testing::internal::DoubleNearPredFormat,                       val1, val2, abs_error) state is ['a']
16:21:31 preproc line is define - ASSERT_NEAR(val1, val2, abs_error)  ASSERT_PRED_FORMAT3(::testing::internal::DoubleNearPredFormat,                       val1, val2, abs_error) state is ['a']
16:21:31 preproc line is if - GTEST_OS_WINDOWS state is ['a']
16:21:31 preproc line is define - EXPECT_HRESULT_SUCCEEDED(expr)     EXPECT_PRED_FORMAT1(::testing::internal::IsHRESULTSuccess, (expr)) state is ['a', 'i']
16:21:31 preproc line is define - ASSERT_HRESULT_SUCCEEDED(expr)     ASSERT_PRED_FORMAT1(::testing::internal::IsHRESULTSuccess, (expr)) state is ['a', 'i']
16:21:31 preproc line is define - EXPECT_HRESULT_FAILED(expr)     EXPECT_PRED_FORMAT1(::testing::internal::IsHRESULTFailure, (expr)) state is ['a', 'i']
16:21:31 preproc line is define - ASSERT_HRESULT_FAILED(expr)     ASSERT_PRED_FORMAT1(::testing::internal::IsHRESULTFailure, (expr)) state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is define - ASSERT_NO_FATAL_FAILURE(statement)     GTEST_TEST_NO_FATAL_FAILURE_(statement, GTEST_FATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - EXPECT_NO_FATAL_FAILURE(statement)     GTEST_TEST_NO_FATAL_FAILURE_(statement, GTEST_NONFATAL_FAILURE_) state is ['a']
16:21:31 preproc line is define - SCOPED_TRACE(message)   ::testing::internal::ScopedTrace GTEST_CONCAT_TOKEN_(gtest_trace_, __LINE__)(    __FILE__, __LINE__, ::testing::Message() << (message)) state is ['a']
16:21:31 preproc line is define - GTEST_TEST(test_case_name, test_name)  GTEST_TEST_(test_case_name, test_name,               ::testing::Test, ::testing::internal::GetTestTypeId()) state is ['a']
16:21:31 preproc line is if - !GTEST_DONT_DEFINE_TEST state is ['a']
16:21:31 preproc line is define - TEST(test_case_name, test_name) GTEST_TEST(test_case_name, test_name) state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is define - TEST_F(test_fixture, test_name)  GTEST_TEST_(test_fixture, test_name, test_fixture,               ::testing::internal::GetTypeId<test_fixture>()) state is ['a']
16:21:31 preproc line is define - RUN_ALL_TESTS()  (::testing::UnitTest::GetInstance()->Run()) state is ['a']
16:21:31 preproc line is endif -  state is ['a']
16:21:31 preproc line is include - <string> state is []
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <fstream> state is []
16:21:31 preproc include found fstream    (<) 
16:21:31 preproc line is include - "normalizer_utility.hpp" state is []
16:21:31 preproc include found normalizer_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_utility.hpp'
16:21:31 preproc line is ifndef - NORMALIZER_UTILITY_H_ state is []
16:21:31 preproc line is define - NORMALIZER_UTILITY_H_ state is ['a']
16:21:31 preproc line is include - <iostream> state is ['a']
16:21:31 preproc include found iostream    (<) 
16:21:31 preproc line is include - <string> state is ['a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a']
16:21:31 preproc include found pficommon/data/string/ustring.h    (<) 
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a']
16:21:31 preproc include found pficommon/data/string/utility.h    (<) 
16:21:31 preproc line is include - <pficommon/text/json.h> state is ['a']
16:21:31 preproc include found pficommon/text/json.h    (<) 
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a']
16:21:31 preproc include found ux/ux.hpp    (<) 
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a']
16:21:31 preproc include found digit_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/digit_utility.hpp'
16:21:31 preproc line is ifndef - DIGIT_UTILITY_H_ state is ['a']
16:21:31 preproc line is define - DIGIT_UTILITY_H_ state is ['a', 'a']
16:21:31 preproc line is include - <map> state is ['a', 'a']
16:21:31 preproc include found map    (<) 
16:21:31 preproc line is include - <string> state is ['a', 'a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <float.h> state is ['a', 'a']
16:21:31 preproc include found float.h    (<) 
16:21:31 preproc line is include - <complex> state is ['a', 'a']
16:21:31 preproc include found complex    (<) 
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'a']
16:21:31 preproc include found pficommon/data/string/ustring.h    (<) 
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a']
16:21:31 preproc line is include - "numerical_expression_normalizer.hpp" state is []
16:21:31 preproc include found numerical_expression_normalizer.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/numerical_expression_normalizer.hpp'
16:21:31 preproc line is ifndef - NUMERICAL_EXPRESSION_NORMALIZER_H_ state is []
16:21:31 preproc line is define - NUMERICAL_EXPRESSION_NORMALIZER_H_ state is ['a']
16:21:31 preproc line is include - <string> state is ['a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a']
16:21:31 preproc include found ux/ux.hpp    (<) 
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a']
16:21:31 preproc include found digit_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/digit_utility.hpp'
16:21:31 preproc line is ifndef - DIGIT_UTILITY_H_ state is ['a']
16:21:31 preproc line is define - DIGIT_UTILITY_H_ state is ['a', 'i']
16:21:31 preproc line is include - <map> state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <float.h> state is ['a', 'i']
16:21:31 preproc line is include - <complex> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - "number_normalizer.hpp" state is ['a']
16:21:31 preproc include found number_normalizer.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/number_normalizer.hpp'
16:21:31 preproc line is ifndef - NUMBER_NORMALIZER_H_ state is ['a']
16:21:31 preproc line is define - NUMBER_NORMALIZER_H_ state is ['a', 'a']
16:21:31 preproc line is include - <string> state is ['a', 'a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <vector> state is ['a', 'a']
16:21:31 preproc include found vector    (<) 
16:21:31 preproc line is include - <float.h> state is ['a', 'a']
16:21:31 preproc include found float.h    (<) 
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'a']
16:21:31 preproc include found pficommon/data/string/ustring.h    (<) 
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a', 'a']
16:21:31 preproc include found pficommon/data/string/utility.h    (<) 
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'a']
16:21:31 preproc include found digit_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/digit_utility.hpp'
16:21:31 preproc line is ifndef - DIGIT_UTILITY_H_ state is ['a', 'a']
16:21:31 preproc line is define - DIGIT_UTILITY_H_ state is ['a', 'a', 'i']
16:21:31 preproc line is include - <map> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <float.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <complex> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is include - "normalizer_utility.hpp" state is ['a']
16:21:31 preproc include found normalizer_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_utility.hpp'
16:21:31 preproc line is ifndef - NORMALIZER_UTILITY_H_ state is ['a']
16:21:31 preproc line is define - NORMALIZER_UTILITY_H_ state is ['a', 'i']
16:21:31 preproc line is include - <iostream> state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/text/json.h> state is ['a', 'i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - "normalizer_template.hpp" state is ['a']
16:21:31 preproc include found normalizer_template.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_template.hpp'
16:21:31 preproc line is ifndef - NORMALIZER_TEMPLATE_H_ state is ['a']
16:21:31 preproc line is define - NORMALIZER_TEMPLATE_H_ state is ['a', 'a']
16:21:31 preproc line is include - <string> state is ['a', 'a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a', 'a']
16:21:31 preproc include found ux/ux.hpp    (<) 
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'a']
16:21:31 preproc include found digit_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/digit_utility.hpp'
16:21:31 preproc line is ifndef - DIGIT_UTILITY_H_ state is ['a', 'a']
16:21:31 preproc line is define - DIGIT_UTILITY_H_ state is ['a', 'a', 'i']
16:21:31 preproc line is include - <map> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <float.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <complex> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is include - "number_normalizer.hpp" state is ['a', 'a']
16:21:31 preproc include found number_normalizer.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/number_normalizer.hpp'
16:21:31 preproc line is ifndef - NUMBER_NORMALIZER_H_ state is ['a', 'a']
16:21:31 preproc line is define - NUMBER_NORMALIZER_H_ state is ['a', 'a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <vector> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <float.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is include - "normalizer_utility.hpp" state is ['a', 'a']
16:21:31 preproc include found normalizer_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_utility.hpp'
16:21:31 preproc line is ifndef - NORMALIZER_UTILITY_H_ state is ['a', 'a']
16:21:31 preproc line is define - NORMALIZER_UTILITY_H_ state is ['a', 'a', 'i']
16:21:31 preproc line is include - <iostream> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <pficommon/text/json.h> state is ['a', 'a', 'i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a', 'a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'a']
16:21:31 preproc line is endif -  state is ['a']
16:21:31 preproc line is include - "abstime_expression_normalizer.hpp" state is []
16:21:31 preproc include found abstime_expression_normalizer.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/abstime_expression_normalizer.hpp'
16:21:31 preproc line is ifndef - ABSTIME_EXPRESSION_NORMALIZER_H_ state is []
16:21:31 preproc line is define - ABSTIME_EXPRESSION_NORMALIZER_H_ state is ['a']
16:21:31 preproc line is include - <iostream> state is ['a']
16:21:31 preproc include found iostream    (<) 
16:21:31 preproc line is include - <string> state is ['a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <algorithm> state is ['a']
16:21:31 preproc include found algorithm    (<) 
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a']
16:21:31 preproc include found digit_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/digit_utility.hpp'
16:21:31 preproc line is ifndef - DIGIT_UTILITY_H_ state is ['a']
16:21:31 preproc line is define - DIGIT_UTILITY_H_ state is ['a', 'i']
16:21:31 preproc line is include - <map> state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <float.h> state is ['a', 'i']
16:21:31 preproc line is include - <complex> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - "number_normalizer.hpp" state is ['a']
16:21:31 preproc include found number_normalizer.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/number_normalizer.hpp'
16:21:31 preproc line is ifndef - NUMBER_NORMALIZER_H_ state is ['a']
16:21:31 preproc line is define - NUMBER_NORMALIZER_H_ state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <vector> state is ['a', 'i']
16:21:31 preproc line is include - <float.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - "normalizer_utility.hpp" state is ['a']
16:21:31 preproc include found normalizer_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_utility.hpp'
16:21:31 preproc line is ifndef - NORMALIZER_UTILITY_H_ state is ['a']
16:21:31 preproc line is define - NORMALIZER_UTILITY_H_ state is ['a', 'i']
16:21:31 preproc line is include - <iostream> state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/text/json.h> state is ['a', 'i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - "normalizer_template.hpp" state is ['a']
16:21:31 preproc include found normalizer_template.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_template.hpp'
16:21:31 preproc line is ifndef - NORMALIZER_TEMPLATE_H_ state is ['a']
16:21:31 preproc line is define - NORMALIZER_TEMPLATE_H_ state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is include - "number_normalizer.hpp" state is ['a', 'i']
16:21:31 preproc line is include - "normalizer_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a']
16:21:31 preproc include found ux/ux.hpp    (<) 
16:21:31 preproc line is endif -  state is ['a']
16:21:31 preproc line is include - "reltime_expression_normalizer.hpp" state is []
16:21:31 preproc include found reltime_expression_normalizer.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/reltime_expression_normalizer.hpp'
16:21:31 preproc line is ifndef - RELTIME_EXPRESSION_NORMALIZER_H_ state is []
16:21:31 preproc line is define - RELTIME_EXPRESSION_NORMALIZER_H_ state is ['a']
16:21:31 preproc line is include - <iostream> state is ['a']
16:21:31 preproc include found iostream    (<) 
16:21:31 preproc line is include - <string> state is ['a']
16:21:31 preproc include found string    (<) 
16:21:31 preproc line is include - <algorithm> state is ['a']
16:21:31 preproc include found algorithm    (<) 
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a']
16:21:31 preproc include found digit_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/digit_utility.hpp'
16:21:31 preproc line is ifndef - DIGIT_UTILITY_H_ state is ['a']
16:21:31 preproc line is define - DIGIT_UTILITY_H_ state is ['a', 'i']
16:21:31 preproc line is include - <map> state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <float.h> state is ['a', 'i']
16:21:31 preproc line is include - <complex> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - "number_normalizer.hpp" state is ['a']
16:21:31 preproc include found number_normalizer.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/number_normalizer.hpp'
16:21:31 preproc line is ifndef - NUMBER_NORMALIZER_H_ state is ['a']
16:21:31 preproc line is define - NUMBER_NORMALIZER_H_ state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <vector> state is ['a', 'i']
16:21:31 preproc line is include - <float.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - "normalizer_utility.hpp" state is ['a']
16:21:31 preproc include found normalizer_utility.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_utility.hpp'
16:21:31 preproc line is ifndef - NORMALIZER_UTILITY_H_ state is ['a']
16:21:31 preproc line is define - NORMALIZER_UTILITY_H_ state is ['a', 'i']
16:21:31 preproc line is include - <iostream> state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/data/string/utility.h> state is ['a', 'i']
16:21:31 preproc line is include - <pficommon/text/json.h> state is ['a', 'i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - "normalizer_template.hpp" state is ['a']
16:21:31 preproc include found normalizer_template.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/normalizer_template.hpp'
16:21:31 preproc line is ifndef - NORMALIZER_TEMPLATE_H_ state is ['a']
16:21:31 preproc line is define - NORMALIZER_TEMPLATE_H_ state is ['a', 'i']
16:21:31 preproc line is include - <string> state is ['a', 'i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a', 'i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is include - "number_normalizer.hpp" state is ['a', 'i']
16:21:31 preproc line is include - "normalizer_utility.hpp" state is ['a', 'i']
16:21:31 preproc line is endif -  state is ['a', 'i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['a']
16:21:31 preproc include found ux/ux.hpp    (<) 
16:21:31 preproc line is endif -  state is ['a']
16:21:31 preproc line is include - "duration_expression_normalizer.hpp" state is []
16:21:31 preproc include found duration_expression_normalizer.hpp    (") 
16:21:31 preproc reading file '/Users/narisawa/src/digit_utils/src/duration_expression_normalizer.hpp'
16:21:31 preproc line is ifndef - RELTIME_EXPRESSION_NORMALIZER_H_ state is []
16:21:31 preproc line is define - RELTIME_EXPRESSION_NORMALIZER_H_ state is ['i']
16:21:31 preproc line is include - <iostream> state is ['i']
16:21:31 preproc line is include - <string> state is ['i']
16:21:31 preproc line is include - <algorithm> state is ['i']
16:21:31 preproc line is include - "digit_utility.hpp" state is ['i']
16:21:31 preproc line is include - "number_normalizer.hpp" state is ['i']
16:21:31 preproc line is include - "normalizer_utility.hpp" state is ['i']
16:21:31 preproc line is include - "normalizer_template.hpp" state is ['i']
16:21:31 preproc line is include - <ux/ux.hpp> state is ['i']
16:21:31 preproc line is endif -  state is ['i']
16:21:31 preproc line is include - <pficommon/data/string/ustring.h> state is []
16:21:31 preproc include found pficommon/data/string/ustring.h    (<) 
16:21:31 preproc line is include - <ux/ux.hpp> state is []
16:21:31 preproc include found ux/ux.hpp    (<) 
16:21:31 deps deps for [/Users/narisawa/src/digit_utils/src/normalizer_tester.cpp]: [/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src/gtest/gtest.h, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/numerical_expression_normalizer.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/number_normalizer.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/normalizer_template.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/number_normalizer.hpp, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/abstime_expression_normalizer.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/number_normalizer.hpp, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/normalizer_template.hpp, /Users/narisawa/src/digit_utils/src/reltime_expression_normalizer.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/number_normalizer.hpp, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/normalizer_template.hpp, /Users/narisawa/src/digit_utils/src/duration_expression_normalizer.hpp]; unresolved ['limits', 'vector', 'ctype.h', 'stddef.h', 'stdlib.h', 'stdio.h', 'string.h', 'sys/types.h', 'sys/stat.h', 'iostream', 'sstream', 'string', 'unistd.h', 'strings.h', 'regex.h', 'typeinfo', 'utility', 'iomanip', 'set', 'iterator', 'assert.h', 'ostream', 'iosfwd', 'fstream', 'pficommon/data/string/ustring.h', 'pficommon/data/string/utility.h', 'pficommon/text/json.h', 'ux/ux.hpp', 'map', 'float.h', 'complex', 'algorithm']
16:21:31 deps scanner for cxx: src/normalizer_tester.cpp -> build/src/normalizer_tester.cpp.9.o  returned [/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src/gtest/gtest.h, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/numerical_expression_normalizer.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/number_normalizer.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/normalizer_template.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/number_normalizer.hpp, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/abstime_expression_normalizer.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/number_normalizer.hpp, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/normalizer_template.hpp, /Users/narisawa/src/digit_utils/src/reltime_expression_normalizer.hpp, /Users/narisawa/src/digit_utils/src/digit_utility.hpp, /Users/narisawa/src/digit_utils/src/number_normalizer.hpp, /Users/narisawa/src/digit_utils/src/normalizer_utility.hpp, /Users/narisawa/src/digit_utils/src/normalizer_template.hpp, /Users/narisawa/src/digit_utils/src/duration_expression_normalizer.hpp] ['limits', 'vector', 'ctype.h', 'stddef.h', 'stdlib.h', 'stdio.h', 'string.h', 'sys/types.h', 'sys/stat.h', 'iostream', 'sstream', 'string', 'unistd.h', 'strings.h', 'regex.h', 'typeinfo', 'utility', 'iomanip', 'set', 'iterator', 'assert.h', 'ostream', 'iosfwd', 'fstream', 'pficommon/data/string/ustring.h', 'pficommon/data/string/utility.h', 'pficommon/text/json.h', 'ux/ux.hpp', 'map', 'float.h', 'complex', 'algorithm']
16:21:31 task task  	{task 4464312464: cxx normalizer_tester.cpp -> normalizer_tester.cpp.9.o} must run as it was never run before or the task code changed
[16/34] cxx: src/normalizer_tester.cpp -> build/src/normalizer_tester.cpp.9.o
16:21:31 runner ['/usr/bin/g++', '-O2', '-Wall', '-g', '-pipe', '-I/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '-I/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '-I/usr/local/include', '-DHAVE_PFICOMMON=1', '-DHAVE_UX=1', '../src/normalizer_tester.cpp', '-c', '-o', 'src/normalizer_tester.cpp.9.o']
16:21:31 runner_env kw={'shell': False, 'cwd': '/Users/narisawa/src/digit_utils/build', 'env': None}
16:21:31 envhash 607338aa0ad23268edf5365d8efaa311 [[], ['-arch'], [], '-I%s', ['/usr/bin/g++'], [], ['-O2', '-Wall', '-g', '-pipe'], [], ['-c', '-o'], ['HAVE_PFICOMMON=1', 'HAVE_UX=1'], '-D%s', [], '-F%s', []]
../src/normalizer_tester.cpp:13: error: ‘duration_expression_normalizer’ is not a namespace-name
../src/normalizer_tester.cpp:13: error: expected namespace-name before ‘;’ token
../src/normalizer_tester.cpp: In function ‘void showvector(const std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)’:
../src/normalizer_tester.cpp:29: warning: comparison between signed and unsigned integer expressions
../src/normalizer_tester.cpp: In function ‘void show_numerical_expressions(const std::vector<numerical_expression_normalizer::NumericalExpression, std::allocator<numerical_expression_normalizer::NumericalExpression> >&)’:
../src/normalizer_tester.cpp:39: warning: comparison between signed and unsigned integer expressions
../src/normalizer_tester.cpp: In function ‘void show_abstime_expressions(const std::vector<abstime_expression_normalizer::AbstimeExpression, std::allocator<abstime_expression_normalizer::AbstimeExpression> >&)’:
../src/normalizer_tester.cpp:47: warning: comparison between signed and unsigned integer expressions
../src/normalizer_tester.cpp: In function ‘void show_reltime_expressions(const std::vector<reltime_expression_normalizer::ReltimeExpression, std::allocator<reltime_expression_normalizer::ReltimeExpression> >&)’:
../src/normalizer_tester.cpp:53: warning: comparison between signed and unsigned integer expressions
Waf: Leaving directory `/Users/narisawa/src/digit_utils/build'
  File "./waf", line 161, in <module>
    Scripting.waf_entry_point(cwd, VERSION, wafdir)
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Scripting.py", line 95, in waf_entry_point
    run_commands()
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Scripting.py", line 148, in run_commands
    run_command(cmd_name)
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Scripting.py", line 140, in run_command
    ctx.execute()
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Scripting.py", line 342, in execute
    return execute_method(self)
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Build.py", line 98, in execute
    self.execute_build()
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Build.py", line 107, in execute_build
    self.compile()
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Tools/errcheck.py", line 118, in check_compile
    ret=self.orig_compile()
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Build.py", line 190, in compile
    raise Errors.BuildError(self.producer.error)
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Errors.py", line 25, in __init__
    WafError.__init__(self,self.format_error())
 
Build failed
 -> task failed (exit status 1): 
	{task 4464312464: cxx normalizer_tester.cpp -> normalizer_tester.cpp.9.o}
['/usr/bin/g++', '-O2', '-Wall', '-g', '-pipe', '-I/Users/narisawa/src/digit_utils/build/.unittest-gtest/gtest-1.6.0/fused-src', '-I/Users/narisawa/src/digit_utils/.unittest-gtest/gtest-1.6.0/fused-src', '-I/usr/local/include', '-DHAVE_PFICOMMON=1', '-DHAVE_UX=1', '../src/normalizer_tester.cpp', '-c', '-o', 'src/normalizer_tester.cpp.9.o']
  File "./waf", line 161, in <module>
	Scripting.waf_entry_point(cwd, VERSION, wafdir)
  File "/Users/narisawa/src/digit_utils/.waf-1.6.9-7330c395352899063370590811613d1d/waflib/Scripting.py", line 99, in waf_entry_point
	Logs.error(e.msg)
